name: Gestion Contact CI/CD

on:
  push:
    branches: [master]
    paths:
      - "gestion-dossier/**"
  pull_request:
    branches: [master]
    paths:
      - "gestion-dossier/**"

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "corretto"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Compile project
        run: |
          cd gestion-dossier
          chmod +x ./gradlew
          ./gradlew compileJava
          ./gradlew compileTestJava

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "corretto"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Running Unit Tests
        run: |
          cd gestion-dossier
          chmod +x ./gradlew
          ./gradlew test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: gestion-dossier/build/reports/tests/

  Build-Analyze:
    runs-on: self-hosted
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "corretto"

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          cd gestion-dossier
          ./gradlew build
          ./gradlew sonar
        shell: powershell

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: gestion-dossier/build/libs/*.jar

  integration-tests:
    runs-on: ubuntu-latest
    needs: Build-Analyze

    steps:
      - name: Integration Tests
        run: |
          # Add Integration test steps here
          echo "Integration tests for gestion-dossier"

  performance-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Performance Tests
        run: |
          # Add Performance test steps here
          echo "Performance tests for gestion-dossier"

  containerize:
    runs-on: ubuntu-latest
    needs: performance-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: gestion-dossier/build/libs/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./gestion-dossier
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gestion-dossier:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/gestion-dossier:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/gestion-dossier:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/gestion-dossier:buildcache,mode=max

  deploy:
    needs: containerize
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Deploy to production
        run: |
          # Add deployment steps here
          echo "Deploying gestion-dossier to production"

  e2e-tests:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: E2E Tests
        run: |
          # Add E2E test steps here
          echo "E2E tests for gestion-dossier"
